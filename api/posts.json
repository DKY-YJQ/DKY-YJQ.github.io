{"total":3,"pageSize":10,"pageCount":1,"data":[{"title":"Pytorch模型保存与加载","slug":"Pytorch模型保存与加载","date":"2025-08-12T11:50:32.000Z","updated":"2025-08-12T12:36:26.388Z","comments":true,"path":"api/articles/Pytorch模型保存与加载.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Pytorch模型保存与加载\"><a href=\"#Pytorch模型保存与加载\" class=\"headerlink\" title=\"Pytorch模型保存与加载\"></a>Pytorch模型保存与加载</h1><h2 id=\"自定义一个卷积神经网络模型\"><a href=\"#自定义一个卷积神经网络模型\" class=\"headerlink\" title=\"自定义一个卷积神经网络模型\"></a>自定义一个卷积神经网络模型</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 定义 CNN 模型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Net</span>(nn.Module):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Net, <span class=\"variable language_\">self</span>).__init__()</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.conv1 = nn.Sequential(</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">1</span>, <span class=\"number\">10</span>, kernel_size=<span class=\"number\">5</span>),<span class=\"comment\"># 接收一个1通道灰度图像，使用10个5x5的卷积核进行特征提取，输出10个特征图</span></span><br><span class=\"line\">            nn.ReLU(),</span><br><span class=\"line\">            nn.MaxPool2d(kernel_size=<span class=\"number\">2</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.conv2 = nn.Sequential(</span><br><span class=\"line\">            nn.Conv2d(<span class=\"number\">10</span>, <span class=\"number\">20</span>, kernel_size=<span class=\"number\">5</span>),</span><br><span class=\"line\">            nn.ReLU(),</span><br><span class=\"line\">            nn.MaxPool2d(kernel_size=<span class=\"number\">2</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        <span class=\"variable language_\">self</span>.fc = nn.Sequential(</span><br><span class=\"line\">            nn.Linear(<span class=\"number\">320</span>, <span class=\"number\">50</span>),<span class=\"comment\"># 320由计算而来</span></span><br><span class=\"line\">            nn.Linear(<span class=\"number\">50</span>, <span class=\"number\">10</span>),</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">forward</span>(<span class=\"params\">self, x</span>):</span><br><span class=\"line\">        batch_size = x.size(<span class=\"number\">0</span>) <span class=\"comment\"># 此时x的结构：(batch_size,channels,width,height)</span></span><br><span class=\"line\">        x = <span class=\"variable language_\">self</span>.conv1(x)</span><br><span class=\"line\">        x = <span class=\"variable language_\">self</span>.conv2(x)</span><br><span class=\"line\">        x = x.view(batch_size, -<span class=\"number\">1</span>)</span><br><span class=\"line\">        x = <span class=\"variable language_\">self</span>.fc(x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例化模型、损失函数和优化器</span></span><br><span class=\"line\">model = Net()</span><br><span class=\"line\">criterion = nn.CrossEntropyLoss() <span class=\"comment\"># 损失函数</span></span><br><span class=\"line\">optimizer = optim.SGD(model.parameters(), lr=learning_rate, momentum=momentum) <span class=\"comment\"># 优化器</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"保存模型至当前文件夹\"><a href=\"#保存模型至当前文件夹\" class=\"headerlink\" title=\"保存模型至当前文件夹\"></a>保存模型至当前文件夹</h2><blockquote>\n<p>torch.save()</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">save_model</span>(<span class=\"params\">model, path=<span class=\"string\">&#x27;model_mnist.pth&#x27;</span></span>):</span><br><span class=\"line\">    torch.save(model.state_dict(), path)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;模型已保存到 <span class=\"subst\">&#123;path&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"从文件夹中加载模型\"><a href=\"#从文件夹中加载模型\" class=\"headerlink\" title=\"从文件夹中加载模型\"></a>从文件夹中加载模型</h2><blockquote>\n<p>torch.load()</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">load_model</span>(<span class=\"params\">model, path=<span class=\"string\">&#x27;model_mnist.pth&#x27;</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> os.path.exists(path):</span><br><span class=\"line\">        model.load_state_dict(torch.load(path))</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;模型已从 <span class=\"subst\">&#123;path&#125;</span> 加载&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;未找到模型文件 <span class=\"subst\">&#123;path&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> model</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"食用案例\"><a href=\"#食用案例\" class=\"headerlink\" title=\"食用案例\"></a>食用案例</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">predict_custom_image</span>(<span class=\"params\">model, image_path</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 加载和预处理图像</span></span><br><span class=\"line\">    img = Image.<span class=\"built_in\">open</span>(image_path).convert(<span class=\"string\">&#x27;L&#x27;</span>)  <span class=\"comment\"># 转换为灰度图像</span></span><br><span class=\"line\">    img = img.resize((<span class=\"number\">28</span>, <span class=\"number\">28</span>))  <span class=\"comment\"># 调整为 28x28</span></span><br><span class=\"line\">    img_tensor = transform(img).unsqueeze(<span class=\"number\">0</span>)  <span class=\"comment\"># 转换为张量并添加批次维度</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 预测</span></span><br><span class=\"line\">    model.<span class=\"built_in\">eval</span>()</span><br><span class=\"line\">    <span class=\"keyword\">with</span> torch.no_grad():</span><br><span class=\"line\">        output = model(img_tensor)</span><br><span class=\"line\">        _, predicted = torch.<span class=\"built_in\">max</span>(output, dim=<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> predicted.item()</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">image_path = <span class=\"string\">&#x27;E://杂物间//Number-3_Resized_.png&#x27;</span>  <span class=\"comment\"># 请确保本地有这张图片</span></span><br><span class=\"line\">model = load_model(model, <span class=\"string\">&#x27;model_mnist.pth&#x27;</span>) <span class=\"comment\"># model需已经被实例化</span></span><br><span class=\"line\">predicted_digit = predict_custom_image(model, image_path)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;预测的数字: <span class=\"subst\">&#123;predicted_digit&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关于-pt和-pth\"><a href=\"#关于-pt和-pth\" class=\"headerlink\" title=\"关于.pt和.pth\"></a>关于.pt和.pth</h2><ul>\n<li>二者并无明显区别</li>\n<li>pt保存的是一个完整的模型，多用于发布、部署</li>\n<li>pth保存的是一个模型的权重，使用时需要先定义出一个模型，并让模型读取预设的权重</li>\n</ul>\n","text":"Pytorch模型保存与加载自定义一个卷积神经网络模型1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"我的第一篇文章","slug":"我的第一篇文章","date":"2025-08-10T12:07:25.000Z","updated":"2025-08-12T11:51:03.794Z","comments":true,"path":"api/articles/我的第一篇文章.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><p>插入代码块：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcout&lt;&lt;<span class=\"string\">&quot;Hello World！&quot;</span>&lt;&lt;endl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>这是一个有序列表：<strong>ctrl + shift + [</strong></li>\n<li>这是一个有序列表</li>\n</ol>\n<ul>\n<li>这是一个无序列表：<strong>ctrl + shift + ]</strong></li>\n<li>这是一个无序列表</li>\n</ul>\n<p>引用一句名言：</p>\n<blockquote>\n<p>金杯共汝饮，白刃不相饶。\t——朱元璋</p>\n</blockquote>\n","text":"一级标题二级标题三级标题四级标题插入代码块：1<br>2<br>3<br>4<br>5<br>6<br>7<br>#include&lt;iostream&gt;<br><br>using namespace std;<br><br>int main()&#123;<br>\tco","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2025-08-09T08:25:32.035Z","updated":"2025-08-09T08:25:02.919Z","comments":true,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":null,"content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ","raw":null,"photos":[],"categories":[],"tags":[]}]}